#!/usr/bin/env/python

from argparse import ArgumentParser
from multiprocessing import Pool
from functools import partial
from ndmg.scripts.ndmg_dwi_pipeline import ndmg_dwi_pipeline
from ndmg.utils.bids_utils import *
from ndmg.scripts.ndmg_bids import worker_wrapper
import ndmg.utils as mgu
import os


def run_tests(nthreads):
    print("Getting test data...")
    os.chdir("/tmp")
    mgu.execute_cmd("rm -rf /tmp/mrilab_demo*")
    mgu.execute_cmd("wget http://openconnecto.me/mrdata/share/demo_data/mrilab_demo.zip", verb=True)
    mgu.execute_cmd("unzip mrilab_demo.zip", verb=True)

    # crawl the demo directory for the inputs
    dwis, bvals, bvecs, anats = sweep_directory("/tmp/mrilab_demo")

    # dependencies
    atlas = "/tmp/mrilab_demo/MNI152_T1-4mm.nii.gz"
    atlas_mask = "/tmp/mrilab_demo/MNI152_T1-4mm_brain_mask.nii.gz"
    label = ["/tmp/mrilab_demo/desikan-4mm.nii.gz"]
    outdir = "/tmp/mrilab_demo/outputs"

    args = [[dw, bval, bvec, anat, atlas, atlas_mask, label, outdir] for (dw, bval, bvec, anat)
            in zip(dwis, bvals, bvecs, anats)]
    f = ndmg_dwi_pipeline
    arg_list = [(f, arg, {'bg': True}) for arg in args]
    p = Pool(nthreads)
    mgu.execute_cmd("mkdir -p " + outdir)
    p.map(worker_wrapper, arg_list)

def main():
    parser = ArgumentParser()
    parser.add_argument("--nthreads", type=int, default=1,
                        help="The number of threads to demo with.")
    result = parser.parse_args()
    run_tests(result.nthreads)

if __name__ == "__main__":
    main()
